apiVersion: v1
kind: Namespace
metadata:
  name: prod
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azure-managed-disk
provisioner: kubernetes.io/azure-disk
parameters:
  skuName: Standard_LRS  # Alternativ Premium_LRS je nach Bedarf
  kind: Managed
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-databases-flow
  namespace: prod
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azure-managed-disk
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-flow
  namespace: prod
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azure-managed-disk
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whometa-flow-flows-whometa
  namespace: prod
  labels:
    app: whometa-flow-flows-whometa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whometa-flow-flows-whometa
  template:
    metadata:
      labels:
        app: whometa-flow-flows-whometa
    spec:
      containers:
        - name: whometa-flow-flows-whometa
          image: wmacs.azurecr.io/whometa/whometa-flow:latest # Passen Sie das Docker-Image an
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: /www/.src/databases
              name: databases-storage
            - mountPath: /www/.src/flowstream
              name: flow-storage
      volumes:
        - name: databases-storage
          persistentVolumeClaim:
            claimName: pvc-databases-flow
        - name: flow-storage
          persistentVolumeClaim:
            claimName: pvc-flow
---
apiVersion: v1
kind: Service
metadata:
  name: whometa-flow-flows-whometa-service
  namespace: prod
  labels:
    app: whometa-flow-flows-whometa
spec:
  selector:
    app: whometa-flow-flows-whometa
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: whometa-flow-flows-whometa-cert
  namespace: prod
spec:
  secretName: whometa-flow-flows-whometa-tls
  issuerRef:
    name: letsencrypt-azure
    kind: ClusterIssuer
  commonName: flow.whometa.eu
  dnsNames:
    - flow.whometa.eu
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whometa-flow-flows-whometa-ingress
  namespace: prod
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-azure
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - flow.whometa.eu
      secretName: whometa-flow-flows-whometa-tls
  rules:
    - host: flow.whometa.eu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: whometa-flow-flows-whometa-service
                port:
                  number: 80
