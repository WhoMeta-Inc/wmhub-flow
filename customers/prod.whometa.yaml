apiVersion: v1
kind: Namespace
metadata:
  name: prod
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-databases-flow-flows-whometa
  labels:
    type: local
spec:
  storageClassName: default
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/whometa/databases-flow"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-flow-flows-whometa
  labels:
    type: local
spec:
  storageClassName: default
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/whometa/flow"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-databases-flow-flows-whometa
  namespace: prod
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-flow-flows-whometa
  namespace: prod
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whometa-flow-flows-whometa
  namespace: prod
  labels:
    app: whometa-flow-flows-whometa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whometa-flow-flows-whometa
  template:
    metadata:
      labels:
        app: whometa-flow-flows-whometa
    spec:
      containers:
      - name: whometa-flow-flows-whometa
        image: wmacs.azurecr.io/whometa/whometa-flow:latest # Passen Sie das Docker-Image an
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /www/.src/databases
          name: databases-storage
        - mountPath: /www/.src/flowstream
          name: flow-storage
      volumes:
      - name: databases-storage
        persistentVolumeClaim:
          claimName: pvc-databases-flow-flows-whometa
      - name: flow-storage
        persistentVolumeClaim:
          claimName: pvc-flow-flows-whometa
---
apiVersion: v1
kind: Service
metadata:
  name: whometa-flow-flows-whometa-service
  namespace: prod
  labels:
    app: whometa-flow-flows-whometa
spec:
  selector:
    app: whometa-flow-flows-whometa
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: whometa-flow-cert
  namespace: prod
spec:
  secretName: whometa-flow-tls
  issuerRef:
    name: letsencrypt-azure
    kind: ClusterIssuer
  commonName: flow.whometa.eu
  dnsNames:
  - flow.whometa.eu
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whometa-flow-ingress
  namespace: prod
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-azure
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - flow.whometa.eu
    secretName: whometa-flow-tls
  rules:
  - host: flow.whometa.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: whometa-flow-flows-whometa-service
            port:
              number: 80
